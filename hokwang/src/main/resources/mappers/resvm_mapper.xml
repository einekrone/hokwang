<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hokwang.mobile.dao.ResvmMapper">
	<select id="getChildList" resultType="babyVO"
		parameterType="babyVO">
		SELECT * FROM BABY
		<where>
			<if test="parent_no != null and parent_no != ''">
				PARENT_NO = #{parent_no}
			</if>
			<if test="baby_no != null and baby_no != ''">
				BABY_NO = #{baby_no}
			</if>
		</where>
	</select>
	<select id="getVacList" resultType="checkupVO">
		SELECT * FROM CHECKUP
		<where>
			<if test="baby_no != null and baby_no != ''">
				CHK_NO NOT IN(SELECT H.CHK_NO
				FROM CHECKHIST H,
				RESERVATION R
				WHERE R.BABY_NO = #{baby_no})
			</if>
		</where>
		ORDER BY CHK_NO
	</select>

	<!-- SELECT COUNT(RESV_TIME), RESV_TIME -->
	<!-- FROM RESERVATION -->
	<!-- WHERE TO_CHAR(RESV_DATE, 'YYYY-MM-DD') = '2021-01-12' -->
	<!-- GROUP BY RESV_TIME -->
	<!-- ORDER BY RESV_TIME; -->

	<insert id="alertInsert" parameterType="alertVO">
		INSERT INTO ALERT
		VALUES
		(#{alert_no},
		#{alert_cont},
		#{alert_title}, sysdate, #{alert_send}
		#{baby_no})
	</insert>

	<insert id="questInsert" parameterType="questionVO">
		INSERT INTO
		QUESTION(QUST_NO,A1,A2,A3,A4)
		VALUES (#{qust_no},
		#{a1},
		#{a2}, #{a3},
		#{a4})
	</insert>

	<update id="questUpdate" parameterType="questionVO">
		UPDATE QUESTION
		SET QUST_NO = #{qust_no},
		A1 = #{a1},
		A2 = #{a2},
		A3 =
		#{a3},
		A4 = #{a4}
		<where>
			QUST_NO = #{qust_no}
		</where>
	</update>

	<delete id="questDelete" parameterType="questionVO">
		DELETE FROM QUESTION
		WHERE QUST_NO = #{qust_no}
	</delete>

	<insert id="resvInsert" parameterType="reservation">
		<!-- <selectKey order="BEFORE" keyProperty="resv_no" -->
		<!-- resultType="String"> -->
		<!-- SELECT NVL(MAX(RESV_NO),0)+1 FROM RESERVATION -->
		<!-- </selectKey> -->
		INSERT INTO RESERVATION(resv_no, resv_date, resv_time
		<if test="resv_detail != null and resv_detail != ''">
			, resv_detail
		</if>
		<if test="resv_memo != null and resv_memo != ''">
			, resv_memo
		</if>
		, baby_no
		<if test="chk_no != null and chk_no != ''">
			, chk_no
		</if>
		, chk_type, resv_type)
		VALUES (#{resv_no},
		#{resv_date}, #{resv_time}
		<if test="resv_detail != null and resv_detail != ''">
			, #{resv_detail}
		</if>
		<if test="resv_memo != null and resv_memo != ''">
			, #{resv_memo}
		</if>
		, #{baby_no}
		<if test="chk_no != null and chk_no != ''">
			, #{chk_no}
		</if>
		, #{chk_type}, #{resv_type})
	</insert>

	<update id="resvUpdate" parameterType="reservation">
		update reservation
		set RESV_NO = #{resv_no}
		, resv_date = #{resv_date}
		,
		resv_time = #{resv_time}
		<if test="resv_detail != null and resv_detail != ''">
			, resv_detail = #{resv_detail}
		</if>
		<if test="resv_memo != null and resv_memo != ''">
			, resv_memo = #{resv_memo}
		</if>
		, chk_type = #{chk_type}
		<if test="chk_no != null and chk_no != ''">
			, chk_no = #{chk_no}
		</if>
		, resv_type = #{resv_type}
		<where>
			RESV_NO = #{resv_no}
		</where>
	</update>

	<delete id="resvDelete" parameterType="reservation">
		DELETE FROM RESERVATION
		WHERE RESV_NO = #{resv_no}
	</delete>
</mapper>